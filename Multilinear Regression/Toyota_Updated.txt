install.package("ape")
library(graphics)
ToyotaCorolla<-read.csv("C:\\Users\\sanu\\Downloads\\Desktop\\Documents\\Excelr\\Multilinear 
                  Regression\\ToyotaCorolla.csv")
View(ToyotaCorolla)
attach(ToyotaCorolla)
summary(ToyotaCorolla)
Corolla<-ToyotaCorolla[c("Price","Age_08_04","KM","HP","cc","Doors","Gears","Quarterly_Tax","Weight")]
summary(Corolla)
mean(Corolla$Price)##10730.82-------------Price
median(Corolla$Price)##9900
var(Corolla$Price)### 13154872
sd(Corolla$Price)###3626.965
library(moments)
skewness(Corolla$Price)###1.702105
kurtosis(Corolla$Price)###6.720604
---------------------------------------------------------
mean(Corolla$Age_08_04)##55.94708--------Age_08_04
median(Corolla$Age_08_04)##61
var(Corolla$Age_08_04)###345.9596
sd(Corolla$Age_08_04)####18.59999
skewness(Corolla$Age_08_04)###-0.8258381
kurtosis(Corolla$Age_08_04)##2.919459
----------------------------------------------------------
mean(Corolla$KM)##68533.26--------KM
median(Corolla$KM)##63389.5
var(Corolla$KM)###1406733707
sd(Corolla$KM)###37506.45
skewness(Corolla$KM)###1.014851
kurtosis(Corolla$KM)####4.67502
-----------------------------------------------------------
mean(Corolla$HP)##101.5021---------HP
median(Corolla$HP)##110
var(Corolla$HP)####224.4327
sd(Corolla$HP)###14.98108
skewness(Corolla$HP)####0.9548369
kurtosis(Corolla$HP)####11.80152
-----------------------------------------------------------
mean(Corolla$cc)##1576.856-----------cc
median(Corolla$cc)##1600
var(Corolla$cc)###180104.1
sd(Corolla$cc)##424.3868
skewness(Corolla$cc)###27.40313
kurtosis(Corolla$cc)###930.4696
-------------------------------------------------------------
mean(Corolla$Doors)##4.033426------------Doors
median(Corolla$Doors)##4
var(Corolla$Doors)##0.9075927
sd(Corolla$Doors)##0.9526766
skewness(Corolla$Doors)####-0.07631517
kurtosis(Corolla$Doors)####1.127581
----------------------------------------------------------------
mean(Corolla$Gears)##5.026462------------------Gears
median(Corolla$Gears)##5
var(Corolla$Gears)##0.03553619
sd(Corolla$Gears)##0.1885104
skewness(Corolla$Gears)###2.281573
kurtosis(Corolla$Gears)####40.56815
-----------------------------------------------------------------
mean(Corolla$Quarterly_Tax)#87.12256--------Quarterly_Tax
median(Corolla$Quarterly_Tax)#85
var(Corolla$Quarterly_Tax)##1691.563
sd(Corolla$Quarterly_Tax)###41.12861
skewness(Corolla$Quarterly_Tax)####1.991751
kurtosis(Corolla$Quarterly_Tax)####7.279218
----------------------------------------------------------------
mean(Corolla$Weight)##1072.46------------Weight
median(Corolla$Weight)###1070
var(Corolla$Weight)###2771.088
sd(Corolla$Weight)####52.64112
skewness(Corolla$Weight)###3.105391
kurtosis(Corolla$Weight)##22.29137
--------------------------------------------------
barplot(Corolla$Price)  
barplot(Corolla$Age_08_04)  
barplot(Corolla$KM)  
barplot(Corolla$HP)  
barplot(Corolla$cc)  
barplot(Corolla$Doors)  
barplot(Corolla$Gears)  
barplot(Corolla$Quarterly_Tax)  
barplot(Corolla$Weight)  
------------------------------------------------
boxplot(Corolla$Price)
boxplot(Corolla$Age_08_04)
boxplot(Corolla$KM)
boxplot(Corolla$HP)
boxplot(Corolla$cc)
boxplot(Corolla$Doors)
boxplot(Corolla$Gears)
boxplot(Corolla$Quarterly_Tax)
boxplot(Corolla$Weight)
-----------------------------------------------
hist(Corolla$Price)
hist(Corolla$Age_08_04)
hist(Corolla$KM)
hist(Corolla$HP)
hist(Corolla$cc)
hist(Corolla$Doors)
hist(Corolla$Gears)
hist(Corolla$Quarterly_Tax)
hist(Corolla$Weight)
--------------------------------------------
pnorm(Corolla$Price,10730.82, 3626.965)  
pnorm(Corolla$Age_08_04,55.94708,18.599999)
pnorm(Corolla$KM, 68533.26, 37506.45)
pnorm(Corolla$HP,101.5021, 14.98108 )
pnorm(Corolla$cc, 1576.856, 424.3868)
pnorm(Corolla$Doors,4.033426, 0.9526766)
pnorm(Corolla$Gears, 5.026462, 0.1885104)
pnorm(Corolla$Quarterly_Tax, 87.12256, 41.12861)
pnorm(Corolla$Weight,1072.46, 52.64112 )
-------------------------------------------------------
qqnorm(Corolla$Price)
qqline(Corolla$Price)
logprice<- log(Corolla$Price)
qqnorm(logprice)
qqline(logprice)
----------------------------------
qqnorm(Corolla$Age_08_04)
qqline(Corolla$Age_08_04)
logage<- log(Corolla$Age_08_04)
qqnorm(logage)
qqline(logage)
expage<- exp(Corolla$Age_08_04)
qqnorm(expage)
sqrtage<-sqrt(Corolla$Age_08_04)
qqnorm(sqrtage)
qqline(sqrtage)
algage<-(Corolla$Age_08_04 * Corolla$Age_08_04)+Corolla$Age_08_04
qqnorm(algage)
qqline(algage)  ######normalisation achieved
---------------------------------------------
qqnorm(Corolla$KM)
qqline(Corolla$KM)
-------------------------------
qqnorm(Corolla$HP)
qqline(Corolla$HP)
loghp<-log(Corolla$HP)
qqnorm(loghp)
qqline(loghp)
exphp<-exp(Corolla$HP)
qqnorm(exphp)
qqline(exphp)
------------------------------------
qqnorm(Corolla$cc)  
qqline(Corolla$cc)
sqrtcc<-sqrt(Corolla$cc)
qqnorm(sqrtcc)
qqline(sqrtcc)
------------------------------
qqnorm(Corolla$Doors)
qqline(Corolla$Doors)
logdoor<-log(Corolla$Doors)
qqnorm(logdoor)
qqline(logdoor)
expdoor<-exp(Corolla$Doors)
qqnorm(expdoor)
sqrtdoor<-sqrt(Corolla$Doors)
qqnorm(sqrtdoor)
algdoor<-((Corolla$Doors) * (Corolla$Doors)) + Corolla$Doors
qqnorm(Corolla$Doors)
recdoor<-1/Corolla$Doors
qqnorm(recdoor)
qqline(recdoor)
sqrdoor<-Corolla$Doors * Corolla$Doors
qqnorm(sqrdoor)
qqline(sqrdoor)
qqnorm(1/sqrdoor)
qqline(1/sqrdoor)
qqnorm(1/(Corolla$Doors^0.5))######not able to see normal distributed
------------------------------------------
qqnorm(Corolla$Gears)
qqline(Corolla$Gears)
---------------------------------------------------
qqnorm(Corolla$Quarterly_Tax)  
qqline(Corolla$Quarterly_Tax)
logtax<-log(Corolla$Quarterly_Tax)
qqnorm(logtax)
qqline(logtax)
exptax<-exp(Corolla$Quarterly_Tax)
qqnorm(exptax)
qqline(exptax)
--------------------------------------------------
qqnorm(Corolla$Weight)
qqline(Corolla$Weight)
logwt<-log(Corolla$Weight)
qqnorm(logwt)
qqline(logwt)
----------------------------------------------
########Normalization completed
-------------------------------------
qqplot(algage,Corolla$Price)
qqplot(Corolla$KM,Corolla$Price)
qqplot(exp(Corolla$HP), Corolla$Price)
qqplot(sqrt(Corolla$cc), Corolla$Price)
qqplot(Corolla$Gears, Corolla$Price)
qqplot(exptax,Corolla$Price)
qqplot(log(Corolla$Weight), Corolla$Price)
----------------------------------------------------
#############scatter Diagram and Calculation of Correlation
----------------------------------------
plot(Corolla$Age_08_04, Corolla$Price)
cor(Corolla$Age_08_04, Corolla$Price)###-0.8765905
plot(Corolla$KM, Corolla$Price)
cor(Corolla$KM, Corolla$Price)###-0.5699602
plot(Corolla$HP, Corolla$Price)
cor(Corolla$HP, Corolla$Price)#####0.3149898
plot(Corolla$cc, Corolla$Price)
cor(Corolla$cc, Corolla$Price)#####30.1263892
plot(Corolla$Doors, Corolla$Price)
cor(Corolla$Doors,Corolla$Price)####0.1853255
plot(Corolla$Gears, Corolla$Price)
cor(Corolla$Gears, Corolla$Price)######0.06310386
plot(Corolla$Quarterly_Tax, Corolla$Price)
cor(Corolla$Quarterly_Tax, Corolla$Price)#######0.2191969
plot(Corolla$Weight, Corolla$Price)
cor(Corolla$Weight, Corolla$Price)#######0.5811976
---------------------------------------------------
######Compute Correlation matrix and Partial Correlation matrix, Covariance matrix
---------------------------------------
pairs(Corolla)####All scatter diagrams in one matrix like plot
cor(Corolla)###Gives us a matrix like format
library(corpcor)
cor2pcor(cor(Corolla))
cov(Corolla)
-----------------------------------------------------
#######Create Normalization function#####33
normalize<-function(x)
{
  return((x-min(x))/max(x))-min(x)
}
#####test normalization function
normalize(c(Corolla$Price,Corolla$Age_08_04,Corolla$KM,Corolla$HP,Corolla$cc,Corolla$Doors,Corolla$Gears,Corolla$Quarterly_Tax,Corolla$Weight))
View(normalize(Corolla$KM))
View(normalize(Corolla$Price))
View(normalize(Corolla$Age_08_04))
###Now normalize the whole data
Corolla<-as.data.frame(lapply(Corolla,normalize))
View(Corolla)##############Got normalized data
#######Dividing into Training Data and Test Data
---------------------------------------------------------
Corolla_train<-ToyotaCorolla[1:800,] 
View(Corolla_train)
Corolla_test<-Corolla[801:1436,] 
View(Corolla_test)
------------------------------------------------
#######Now plot the model 
  ----------------------------------------------
library(corpcor)  
cor2pcor(cor(Corolla_train))
model.Corolla_train <- lm(Corolla$Price ~ Corolla$Age_08_04 + Corolla$KM + Corolla$HP +Corolla$cc +Corolla$Doors +
                            Corolla$Gears + Corolla$Quarterly_Tax+Corolla$Weight)
summary(model.Corolla_train)
### We got from summary(model.Corolla_train) that except Corolla$cc and Corolla$Doors all are significant
#Multiple R Squared - 0.8638,Adjusted R-squared- 0.863,
####Lets try to increase R-squared value by doing transformation of Corolla$cc and Corolla$Doors
model.Corolla_train <- lm(Corolla$Price ~ Corolla$Age_08_04 + Corolla$KM + Corolla$HP +sqrt(Corolla$cc) +Corolla$Doors +
                            Corolla$Gears + Corolla$Quarterly_Tax+Corolla$Weight)
summary(model.Corolla_train)
##After normalising Corolla$cc, our Multiple R-squared got increased to 0.8648, Adjusted r-squared increased to 0.8641
###Now except Corolla$Dooors ,all variables are significant 
###we wont be able to normalize Corolla$Doors
##Scatter plot matrix with correlations inserted in graph
panel.smooth<-function(x, ...)
{
  usr <- par("usr");on.exit(par(usr))
  par(usr=c(usr[1:2],0,5.5))
  h<-hist(x,plot=FALSE)
  breaks<-h$breaks; nB<-length(breaks)
  y<-h$counts; y<- y/max(y)
  rect(breaks[-nB],0,breaks[-1],y,col="grey90",..)
}
panel.cor<-function(x,y,digits=2,prefix = "",cex.cor,..)
{
  usr<-par("usr");on.exit(par(usr))
  par(usr=c(0,1,0,1))
  r=(cor(x,y))
  txt<-format(c(r,0.123456789),digits=digits[1])
  txt<-paste(prefix,txt,sep="")
  if(missing(cex.cor))cex<-0.4/strwidth(txt)
  text(0.5,0.5,txt,cex=cex)
}
par(no.readonly=FALSE)
on.exit(expr=NULL, add= FALSE, after = TRUE)
##summary(panel.corolla(scatterplot(model.Corolla)))
pairs(Corolla_train,upper.panel = panel.cor, main="Scatter plot matrix with correlation 
      coefficient clients")
###########Predict the model
pred1<-predict(model.Corolla_train)
summary(pred1)
#################################Checking normality of residuals
qqnorm(model.Corolla_train$residuals)
qqline(model.Corolla_train$residuals)#####most of the residuals are in line i.e.normal
sqrt(mean(model.Corolla_train$residuals^2))
###########Checking Confidence interval
confint(model.Corolla_train,level=0.95)
#####Predict the data with interval of confidence and also prediction
predict(model.Corolla_train, interval="confidence")
predict(model.Corolla_train, interval = "prediction")
####Draw ggplot
library(ggplot2)
ggplot(data=Corolla_train, aes(x=Corolla_train$Age_08_04 + Corolla_train$KM + Corolla_train$HP +sqrt(Corolla_train$cc) +Corolla_train$Doors +Corolla_train$Gears + Corolla_train$Quarterly_Tax+Corolla_train$Weight, y=Corolla_train$Price))+
                                 
  geom_point(color='blue')+geom_line(color='red', data=Corolla_train,aes(x=Corolla_train$Age_08_04 + Corolla_train$KM + Corolla_train$HP +sqrt(Corolla_train$cc) +Corolla_train$Doors +
                                                                           Corolla_train$Gears + Corolla_train$Quarterly_Tax+Corolla_train$Weight, y=pred1))
#line
ggplot(data=Corolla_train,aes(Corolla_train$Age_08_04 + Corolla_train$KM + Corolla_train$HP +sqrt(Corolla_train$cc) +Corolla_train$Doors +
                                Corolla_train$Gears + Corolla_train$Quarterly_Tax+Corolla_train$Weight,Corolla_train$Price))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) +geom_smooth(method='lm')

library(influence.ME)
##Deletion Diagnostics for identifying influential variables
influence.measures(model.Corolla_train)
infIndexPlot:influenceIndexPlot(model.Corolla_train,id.n=6)##Indexplot of the influence 
###measures
influencePlot(model.Corolla_train,id.n=6)
------------------------------------------
 
##Let us try to delete 81st,222th,961th observations
model.Corolla_train<-lm(Corolla$Price ~ Corolla$Age_08_04 + Corolla$KM + Corolla$HP +sqrt(Corolla$cc) +Corolla$Doors +
                     Corolla$Gears + Corolla$Quarterly_Tax+Corolla$Weight, data 
                   = Corolla[-c(81,222,961),])
summary(model.Corolla_train)
##Variance Inflation factor is a formal way to check for collinearity and Doors is not 
##seems to be significant
###We removed 81st, 222nd, 961th observation but still multiple R-squared:0.8648, Adjusted R-squared:0.8641
vif(model.Corolla_train)
plot(Corolla$Doors,Corolla$Price,col="dodgerblue4", pch=20)
influenceIndexPlot(model.Corolla_train,id.n=6)
influencePlot(model.Corolla_train,id.n=6)
layout(matrix(c(1,2,3,4),2,2))
avPlots(model.Corolla_train)
model.Corolla_test <- lm(Corolla$Price ~ Corolla$Age_08_04 + Corolla$KM + Corolla$HP +Corolla$cc +Corolla$Doors +
                          Corolla$Gears + Corolla$Quarterly_Tax+Corolla$Weight)
summary(model.Corolla_test)
library(corpcor)
pairs(Corolla_test,upper.panel = panel.cor, main="Scatter plot matrix with correlation 
      coefficient clients")
pred2<-predict(model.Corolla_test)
summary(pred2)
qqnorm(model.Corolla_test$residuals)
qqline(model.Corolla_test$residuals)#####most of the residuals are in line i.e.normal
sqrt(mean(model.Corolla_test$residuals^2))####1338.258
confint(model.Corolla_test,level=0.95)
predict(model.Corolla_test, interval="confidence")
predict(model.Corolla_test, interval="prediction")
ggplot(data=Corolla_test, aes(x=Corolla_test$Age_08_04 + Corolla_test$KM + Corolla_test$HP +sqrt(Corolla_test$cc) +Corolla_test$Doors +Corolla_test$Gears + Corolla_test$Quarterly_Tax+Corolla_test$Weight, y=Corolla_test$Price))+
  geom_point(color='blue')+geom_line(color='red', data=Corolla_test,aes(x=Corolla_test$Age_08_04 + Corolla_test$KM + Corolla_test$HP +sqrt(Corolla_test$cc) +Corolla_test$Doors + Corolla_test$Gears + Corolla_test$Quarterly_Tax+Corolla_test$Weight, y=pred2))
#line
ggplot(data=Corolla_test,aes(Corolla_test$Age_08_04 + Corolla_test$KM + Corolla_test$HP +sqrt(Corolla_test$cc) +Corolla_test$Doors +
                               Corolla_test$Gears + Corolla_test$Quarterly_Tax+Corolla_test$Weight,Corolla_test$Price))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) +geom_smooth(method='lm')##p value
model.final<-lm(Corolla$Price ~ Corolla$Age_08_04 + Corolla$KM + Corolla$HP +sqrt(Corolla$cc) +Corolla$Gears + Corolla$Quarterly_Tax+Corolla$Weight, data 
                          = Corolla[-c(81,222,961),])
summary(model.final)
plot(model.final)
qqPlot(model.final) 

