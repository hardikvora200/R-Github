inspect(sort(groceries_rules,by="lift"))
library(arules)
library(arules)
groceries<-read.transactions("C:\\Users\\sanu\\Downloads\\Desktop\\Documents\\Excelr\\Association Rules\\groceries.csv",format="basket")
inspect(groceries[1:10])
View(groceries)
class(groceries)
itemFrequencyPlot(groceries,topN=25)
groceries_rules<-apriori(groceries,parameter = list(support = 0.002,confidence = 0.05,minlen=3))
inspect(sort(groceries_rules,by="lift"))
library(arulesViz)
plot(groceries_rules,method = "scatterplot",jitter=0)
plot(groceries_rules,method = "grouped")
plot(groceries_rules,method = "graph")
plot(groceries_rules,method = "graph", control = 50)
?plot()
?plot()
plot(groceries_rules,method = "doubledecker")
plot(oneRule,method = "doubledecker",data=groceries)
oneRule <- sample(groceries_rules, 1)
plot(oneRule,method = "doubledecker",data=groceries)
plot(groceries_rules,method = "scatterplot",control=list(col=sequential_hcl(100)))
library(colorspace)
plot(groceries_rules,method = "scatterplot",control=list(col=sequential_hcl(100)))
plot(groceries_rules,method = "scatterplot",jitter = 0,control=list(col=sequential_hcl(100)))
plot(groceries_rules,method = "two-key plot")
plot(groceries_rules,method = "two-key plot",jitter = 0)
plot(groceries_rules,method = "two-key plot",jitter = 0,col=rainbow(5))
plot(groceries_rules,method = "two-key plot",jitter = 0,control=list(main = "Two-key plot", col=rainbow(5)))
plot(groceries_rules,method = "matrix")
plot(groceries_rules,method = "matrix3D")
plot(groceries_rules,method = "matrix", engine.display.list("3D"))
plot(groceries_rules,method = "matrix")
plot(groceries_rules,method = "matrix3D")
## The following techniques work better with fewer rules
subrules <- subset(groceries_rules, lift>2.5)
subrules
plot(subrules,method = "matrix")
plot(subrules,method = "matrix", control=list(reorder=TRUE))
plot(subrules,method = "matrix", control=list(reorder=NONE))
plot(subrules,method = "matrix", measure="lift",control=list(reorder=NONE))
plot(subrules,method = "matrix", measure="lift",control=list(reorder=TRUE))
plot(subrules,method = "matrix", measure="lift")
## The following techniques work better with fewer rules
if(NA) {}
plot(subrules,method = "matrix", measure="lift")
plot(subrules,method = "matrix", measure="lift",if(NA) {})
plot(subrules,method = "matrix", measure="lift",if(NA) {})
plot(subrules,method = "matrix", measure="lift",if(NA) {FALSE})
is.na(subrules)
is.na(groceries_rules)
is.na("subrules")
plot(subrules,method = "matrix", measure="lift")
plot(subrules,method = "matrix", measure="lift",if(NA){return FALSE})
plot(subrules,method = "matrix", measure="lift",if(NA){return 0})
plot(subrules,method = "matrix", measure="lift",if(NA){return 'FALSE'})
plot(subrules,method = "matrix", measure="lift",if(NA){return "FALSE"})
plot(subrules,method = "matrix", measure="lift")
if(TRUE)
{
plot(subrules,method = "matrix", measure="lift")
}
elseif
{
returnValue(0)
}
if(isTRUE)
{
plot(subrules,method = "matrix", measure="lift")
}
if(engine.display.list(TRUE))
{
plot(subrules,method = "matrix", measure="lift")
}
plot(groceries_rules,method = "matrix3D")
plot(subrules,method = "matrix3D")
plot(subrules,method = "matrix", measure="lift")
plot(subrules,method = "matrix3D")
oneRule <- sample(groceries_rules, 1)
plot(oneRule,method = "doubledecker",data=groceries)
plot(groceries_rules,method = "iplots")
plot(groceries_rules,method = "iplots",interactive = TRUE)
plot(groceries_rules,method = "iplots",engine = 'interactive')
install.packages("iplots")
plot(groceries_rules,method = "iplots",engine = 'interactive')
plot(groceries_rules,method = "iplots",engine = 'interactive',interactive=TRUE)
plot(groceries_rules,method = "iplots",engine = 'interactive')
iplots(experimental)
plot(groceries_rules,method = "iplots",engine = 'interactive')
plot(groceries_rules,method = "grouped")
plot(groceries_rules,method = "graph", control = 50)
plot(groceries_rules,method = "graph")
plot(groceries_rules,method = "mosaic")
plot(oneRule,method = "mosaic")
plot(oneRule,method = "mosaic",data=groceries)
### On inbuilt Data set #####
library(arules)
data("Groceries")
summary(groceries)
inspect(Groceries[1:10])
rules <- apriori(Groceries,parameter = list(support = 0.002,confidence = 0.05,minlen=5))
inspect(rules[1:5])
plot(rules,method = "scatterplot")
plot(rules,method = "grouped")
plot(rules,method = "graph")
plot(rules,method = "mosaic")
rules <- sort(rules,by="lift")
inspect(rules[1:4])
