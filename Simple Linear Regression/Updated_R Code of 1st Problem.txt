1) Calories_consumed-> predict weight gained using calories consumed

library(graphics)
weight<-read.csv("C:\\Users\\sanu\\Downloads\\Desktop\\Documents\\Excelr\\Simple Linear Regression\\calories_consumed.csv")
View(weight)
attach(weight)
summary(weight)
plot(Calories.Consumed, Weight.gained..grams.)
##correlation coefficient value
cor(Calories.Consumed, Weight.gained..grams.)
#simple linear regression mode
reg<-lm(Weight.gained..grams.~Calories.Consumed)
summary(reg)
pred<-predict(reg)
qqnorm(reg$residuals)
qqline(reg$residuals)
sqrt(sum(reg$residuals^2)/nrow(weight))
sqrt(mean(reg$residuals^2))
confint(reg,level=0.95)
pred<-predict(reg, interval="prediction")
predict.lm()<-predict(reg, interval="confidence")

library(ggplot2)
a<-ggplot(data=weight, aes(x=Calories.Consumed, y=Weight.gained..grams.))+
  geom_point(color='blue')+geom_line(color='red', data=weight,aes(x=Calories.Consumed, y=pred))
  #line
    ggplot(data=weight,aes(Calories.Consumed,Weight.gained..grams.))+stat_summary(fun.args = list()) + geom_smooth(method='lm')
qqnorm(a)



## Logarithmic transformation
plot(log(Calories.Consumed), Weight.gained..grams.)
##correlation coefficient value
cor(log(Calories.Consumed), Weight.gained..grams.)
reg_log<-lm(Weight.gained..grams.~log(Calories.Consumed))
summary(reg_log)
pred<-predict(reg_log)
qqnorm(reg_log$residuals)
qqline(reg_log$residuals)
sqrt(sum(reg_log$residuals^2)/nrow(weight))
sqrt(mean(reg_log$residuals^2))
confint(reg_log,level=0.95)
predict(reg_log,interval="prediction")
predict(reg_log, interval="confidence")
library(ggplot2)
ggplot(data=weight, aes(x=log(Calories.Consumed), y=Weight.gained..grams.))+
  geom_point(color='blue')+geom_line(color='red', data=weight,aes(x=log(Calories.Consumed), y=pred))

ggplot(data=weight,aes(Calories.Consumed,Weight.gained..grams.))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')


##Exponential Transformation

plot(Calories.Consumed, log(Weight.gained..grams.))
##correlation coefficient value
cor(Calories.Consumed, log(Weight.gained..grams.))
reg_exp<-lm(log(Weight.gained..grams.)~Calories.Consumed)
summary(reg_exp)
pred<-predict(reg_exp)
qqnorm(reg_exp$residuals)
qqline(reg_exp$residuals)
sqrt(sum(reg_exp$residuals^2)/nrow(weight))
sqrt(mean(reg_exp$residuals^2))
##sqrt(sum(error^2)/nrow(weight))
confint(reg_exp,level=0.95)
predict(reg_exp,interval="prediction")
predict(reg_exp, interval="confidence")
library(ggplot2)
ggplot(data=weight, aes(x=Calories.Consumed, y=log(Weight.gained..grams.)))+
  geom_point(color='blue')+geom_line(color='red', data=weight,aes(x=Calories.Consumed, y=pred))

ggplot(data=weight,aes(Calories.Consumed,log(Weight.gained..grams.))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')




##Polynomial with 2 degrees(Quadratic model)
plot((Calories.Consumed*Calories.Consumed), Weight.gained..grams.)
##correlation coefficient value
cor((Calories.Consumed*Calories.Consumed), Weight.gained..grams.)
plot((Calories.Consumed*Calories.Consumed), log(Weight.gained..grams.))
##correlation coefficient value
cor((Calories.Consumed*Calories.Consumed), log(Weight.gained..grams.))
quad_mod1<- lm(Weight.gained..grams.~Calories.Consumed+(Calories.Consumed*Calories.Consumed), data= weight)
quad_mod2<- lm(log(Weight.gained..grams.)~Calories.Consumed+(Calories.Consumed*Calories.Consumed), data= weight)
summary(quad_mod1)
summary(quad_mod2)

qqnorm(quad_mod1$residuals)
qqline(quad_mod1$residuals)
qqnorm(quad_mod2$residuals)
qqline(quad_mod2$residuals)
quad1<-predict(quad_mod1)
quad2<-predict(quad_mod2)
#Weight.gained..grams.1<-exp(quad1)
#Weight.gained..grams.2<-exp(quad2)

##error1<-weight$Weight.gained..grams.1- quad1
##error2<-weight$Weight.gained..grams.2- quad2

sqrt(sum(quad_mod1$residuals^2)/nrow(weight))
sqrt(sum(quad_mod2$residuals^2)/nrow(weight))
confint(quad_mod1,level=0.95)
confint(quad_mod2,level=0.95)

predict(quad_mod1,interval="prediction")
predict(quad_mod2,interval="prediction")
predict(quad_mod1, interval="confidence")
predict(quad_mod1,interval="confidence")
ca<-Calories.Consumed+(Calories.Consumed*Calories.Consumed)
library(ggplot2)
ggplot(data=weight, aes(x=ca, y=log(Weight.gained..grams.)))+
  geom_point(color="blue")+geom_line(color='red', data=weight,aes(x=ca,
        y=predict(quad_mod1, interval="prediction")))

ggplot(data=weight,aes(ca,log(Weight.gained..grams.)))+stat_summary(fun.args=list())+geom_smooth(method='lm')
ggplot(data=weight, aes(x=ca, y=Weight.gained..grams.))+
  geom_point(color="blue")+geom_line(color='red', data=weight,aes(x=ca,
                                                                  y=predict(quad_mod1, interval="prediction")))

ggplot(data=weight,aes(ca,Weight.gained..grams.))+stat_summary(fun.args=list())+geom_smooth(method='lm')


#####Square-root Transformation

plot(sqrt(Calories.Consumed), Weight.gained..grams.)
##correlation coefficient value
cor(sqrt(Calories.Consumed), Weight.gained..grams.)
reg_sq<-lm(Weight.gained..grams.~sqrt(Calories.Consumed))
summary(reg_sq)
pred<-predict(reg_sq)
qqnorm(reg_sq$residuals)
qqline(reg_sq$residuals)
sqrt(sum(reg_sq$residuals^2)/nrow(weight))
sqrt(mean(reg_sq$residuals^2))
confint(reg_sq,level=0.95)
predict(reg_sq,interval="prediction")
predict(reg_sq, interval="confidence")
library(ggplot2)
ggplot(data=weight, aes(x=sqrt(Calories.Consumed), y=Weight.gained..grams.))+
  geom_point(color='blue')+geom_line(color='red', data=weight,aes(x=sqrt(Calories.Consumed), y=pred))

ggplot(data=weight,aes(sqrt(Calories.Consumed),Weight.gained..grams.))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')


#############Reciprocal Transformation

plot((1/Calories.Consumed), Weight.gained..grams.)
##correlation coefficient value
cor((1/Calories.Consumed), Weight.gained..grams.)
reg_re<-lm(Weight.gained..grams.~(1/Calories.Consumed))
summary(reg_re)
pred<-predict(reg_re)
qqnorm(reg_re$residuals)
qqline(reg_re$residuals)
sqrt(sum(reg_re$residuals^2)/nrow(weight))
sqrt(mean(reg_re$residuals^2))
confint(reg_re,level=0.95)
predict(reg_re,interval="prediction")
predict(reg_re, interval="confidence")
library(ggplot2)
ggplot(data=weight, aes(x=(1/Calories.Consumed), y=Weight.gained..grams.))+
  geom_point(color='blue')+geom_line(color='red', data=weight,aes(x=(1/Calories.Consumed), y=pred))

ggplot(data=weight,aes((1/Calories.Consumed),Weight.gained..grams.))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')

############Square Transformation

plot(Calories.Consumed*Calories.Consumed, Weight.gained..grams.)
##correlation coefficient value
cor(Calories.Consumed*Calories.Consumed, Weight.gained..grams.)
reg_squ<-lm(Weight.gained..grams.~(Calories.Consumed*Calories.Consumed))
summary(reg_squ)
pred<-predict(reg_squ)
qqnorm(reg_squ$residuals)
qqline(reg_squ$residuals)
sqrt(sum(reg_squ$residuals^2)/nrow(weight))
sqrt(mean(reg_squ$residuals^2))
confint(reg_squ,level=0.95)
predict(reg_squ,interval="prediction")
predict(reg_squ, interval="confidence")
library(ggplot2)
ggplot(data=weight, aes(x=Calories.Consumed*Calories.Consumed, y=Weight.gained..grams.))+
  geom_point(color='blue')+geom_line(color='red', data=weight,aes(x=Calories.Consumed*Calories.Consumed, y=pred))

ggplot(data=weight,aes(Calories.Consumed*Calories.Consumed,Weight.gained..grams.))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')




