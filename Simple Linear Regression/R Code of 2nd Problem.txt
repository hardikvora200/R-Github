
2) Delivery_time -> Predict delivery time using sorting time



library(graphics)
delivery<-read.csv("C:\\Users\\sanu\\Downloads\\Desktop\\Documents\\Excelr\\Simple Linear Regression\\delivery_time.csv")
View(delivery)
attach(delivery)
summary(delivery)
plot(Sorting.Time, Delivery.Time)
##correlation coefficient value
cor(Sorting.Time, Delivery.Time)
#simple linear regression mode
reg<-lm(Delivery.Time~Sorting.Time)
summary(reg)
pred<-predict(reg)
qqnorm(reg$residuals)
qqline(reg$residuals)
sqrt(sum(reg$residuals^2)/nrow(delivery))
sqrt(mean(reg$residuals^2))
confint(reg,level=0.95)
predict(reg, interval="prediction")
predict(reg, interval="confidence")

library(ggplot2)
ggplot(data=delivery, aes(x=Sorting.Time, y=Delivery.Time))+
  geom_point(color='blue')+geom_line(color='red', data=delivery,aes(x=Sorting.Time, y=pred))
#line
ggplot(data=delivery,aes(Sorting.Time,Delivery.Time))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')




## Logarithmic transformation
plot(log(Sorting.Time), Delivery.Time)
##correlation coefficient value
cor(log(Sorting.Time), Delivery.Time)
#simple linear regression mode
reg_log<-lm(Delivery.Time~log(Sorting.Time))
summary(reg_log)
pred<-predict(reg_log)
qqnorm(reg_log$residuals)
qqline(reg_log$residuals)
sqrt(sum(reg_log$residuals^2)/nrow(delivery))
sqrt(mean(reg_log$residuals^2))
confint(reg_log,level=0.95)
predict(reg_log, interval="prediction")
predict(reg_log, interval="confidence")

library(ggplot2)
ggplot(data=delivery, aes(x=log(Sorting.Time), y=Delivery.Time))+
  geom_point(color='blue')+geom_line(color='red', data=delivery,aes(x=log(Sorting.Time), y=pred))
#line
ggplot(data=delivery,aes(log(Sorting.Time),Delivery.Time))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')



##Exponential Transformation


plot(Sorting.Time, log(Delivery.Time))
##correlation coefficient value
cor(Sorting.Time, log(Delivery.Time))
reg_exp<-lm(log(Delivery.Time)~Sorting.Time)
summary(reg_exp)
pred<-predict(reg_exp)
qqnorm(reg_exp$residuals)
qqline(reg_exp$residuals)
sqrt(sum(reg_exp$residuals^2)/nrow(delivery))
sqrt(mean(reg_exp$residuals^2))
##sqrt(sum(error^2)/nrow(weight))
confint(reg_exp,level=0.95)
predict(reg_exp,interval="prediction")
predict(reg_exp, interval="confidence")
library(ggplot2)
ggplot(data=delivery, aes(x=Sorting.Time, y=log(Delivery.Time)))+
  geom_point(color='blue')+geom_line(color='red', data=delivery,aes(x=Sorting.Time, y=pred))

ggplot(data=delivery,aes(Sorting.Time,log(Delivery.Time)))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')
       
       


##Polynomial with 2 degrees(Quadratic model)
plot(Sorting.Time+(Sorting.Time*Sorting.Time), Delivery.Time)
##correlation coefficient value
cor(Sorting.Time+(Sorting.Time*Sorting.Time), Delivery.Time)
plot(Sorting.Time+(Sorting.Time*Sorting.Time), log(Delivery.Time))
##correlation coefficient value
cor(Sorting.Time+(Sorting.Time*Sorting.Time), log(Delivery.Time))
quad_mod1<- lm(Delivery.Time~Sorting.Time+(Sorting.Time*Sorting.Time), data= delivery)
quad_mod2<- lm(log(Delivery.Time)~Sorting.Time+(Sorting.Time*Sorting.Time), data= delivery)
summary(quad_mod1)
summary(quad_mod2)

qqnorm(quad_mod1$residuals)
qqline(quad_mod1$residuals)
qqnorm(quad_mod2$residuals)
qqline(quad_mod2$residuals)
quad1<-predict(quad_mod1)
quad2<-predict(quad_mod2)
#Delivery.Time1<-exp(quad1)
#Delivery.Time2<-exp(quad2)

##error1<-weight$Delivery.Time1- quad1
##error2<-weight$Delivery.Time2- quad2

sqrt(sum(quad_mod1$residuals^2)/nrow(delivery))
sqrt(mean(quad_mod1$residuals^2))
sqrt(mean(quad_mod2$residuals^2))
confint(quad_mod1,level=0.95)
confint(quad_mod2,level=0.95)

predict(quad_mod1,interval="prediction")
predict(quad_mod2,interval="prediction")
predict(quad_mod1, interval="confidence")
predict(quad_mod2,interval="confidence")
ca<-Sorting.Time+(Sorting.Time*Sorting.Time)
library(ggplot2)
ggplot(data=delivery, aes(x=ca, y=log(Delivery.Time)))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod1, interval="prediction")))

ggplot(data=delivery,aes(ca,log(Delivery.Time)))+stat_summary(fun.args=list(),fun.data = mean_cl_normal)+geom_smooth(method='lm')
ggplot(data=delivery, aes(x=ca, y=Delivery.Time))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod1, interval="prediction")))
ggplot(data=delivery,aes(ca,Delivery.Time))+stat_summary(fun.args=list())+geom_smooth(method='lm')
ggplot(data=delivery, aes(x=ca, y=Delivery.Time))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod2, interval="prediction")))
ggplot(data=delivery,aes(ca,Delivery.Time))+stat_summary(fun.args=list())+geom_smooth(method='lm')

ggplot(data=delivery, aes(x=ca, y=log(Delivery.Time)))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod2, interval="prediction")))

ggplot(data=delivery,aes(ca,log(Delivery.Time)))+stat_summary(fun.args=list(),fun.data = mean_cl_normal)+geom_smooth(method='lm')



ggplot(data=delivery, aes(x=ca, y=log(Delivery.Time)))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod1, interval="confidence")))

ggplot(data=delivery,aes(ca,log(Delivery.Time)))+stat_summary(fun.args=list(),fun.data = mean_cl_normal)+geom_smooth(method='lm')
ggplot(data=delivery, aes(x=ca, y=Delivery.Time))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod1, interval="confidence")))
ggplot(data=delivery,aes(ca,Delivery.Time))+stat_summary(fun.args=list())+geom_smooth(method='lm')
ggplot(data=delivery, aes(x=ca, y=Delivery.Time))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod2, interval="confidence")))
ggplot(data=delivery,aes(ca,Delivery.Time))+stat_summary(fun.args=list())+geom_smooth(method='lm')

ggplot(data=delivery, aes(x=ca, y=log(Delivery.Time)))+
  geom_point(color="blue")+geom_line(color='red', data=delivery,aes(x=ca,
                                                                    y=predict(quad_mod2, interval="confidence")))

ggplot(data=delivery,aes(ca,log(Delivery.Time)))+stat_summary(fun.args=list(),fun.data = mean_cl_normal)+geom_smooth(method='lm')


#####Square-root Transformation
       

plot(sqrt(Sorting.Time), Delivery.Time)
##correlation coefficient value
cor(sqrt(Sorting.Time), Delivery.Time)
reg_sq<-lm(Delivery.Time~sqrt(Sorting.Time))
summary(reg_sq)
pred<-predict(reg_sq)
qqnorm(reg_sq$residuals)
qqline(reg_sq$residuals)
sqrt(sum(reg_sq$residuals^2)/nrow(delivery))
sqrt(mean(reg_sq$residuals^2))
confint(reg_sq,level=0.95)
predict(reg_sq,interval="prediction")
predict(reg_sq, interval="confidence")
library(ggplot2)
ggplot(data=delivery, aes(x=sqrt(Sorting.Time), y=Delivery.Time))+
  geom_point(color='blue')+geom_line(color='red', data=delivery,aes(x=sqrt(Sorting.Time), y=pred))

ggplot(data=delivery,aes(sqrt(Sorting.Time),Delivery.Time))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')



       #############Reciprocal Transformation
plot((1/Sorting.Time), Delivery.Time)
##correlation coefficient value
cor((1/Sorting.Time), Delivery.Time)
reg_re<-lm(Delivery.Time~(1/Sorting.Time))
summary(reg_re)
pred<-predict(reg_re)
qqnorm(reg_re$residuals)
qqline(reg_re$residuals)
sqrt(sum(reg_re$residuals^2)/nrow(delivery))
sqrt(mean(reg_re$residuals^2))
confint(reg_re,level=0.95)
predict(reg_re,interval="prediction")
predict(reg_re, interval="confidence")
library(ggplot2)
ggplot(data=delivery, aes(x=(1/Sorting.Time), y=Delivery.Time))+
  geom_point(color='blue')+geom_line(color='red', data=delivery,aes(x=(1/Sorting.Time), y=pred))

ggplot(data=delivery,aes((1/Sorting.Time),Delivery.Time))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')


       ############Square Transformation

plot(Sorting.Time*Sorting.Time, Delivery.Time)
##correlation coefficient value
cor(Sorting.Time*Sorting.Time, Delivery.Time)
reg_squ<-lm(Delivery.Time~(Sorting.Time*Sorting.Time))
summary(reg_squ)
pred<-predict(reg_squ)
qqnorm(reg_squ$residuals)
qqline(reg_squ$residuals)
sqrt(sum(reg_squ$residuals^2)/nrow(delivery))
sqrt(mean(reg_squ$residuals^2))
confint(reg_squ,level=0.95)
predict(reg_squ,interval="prediction")
predict(reg_squ, interval="confidence")
library(ggplot2)
ggplot(data=delivery, aes(x=Sorting.Time*Sorting.Time, y=Delivery.Time))+
  geom_point(color='blue')+geom_line(color='red', data=delivery,aes(x=Sorting.Time*Sorting.Time, y=pred))

ggplot(data=delivery,aes(Sorting.Time*Sorting.Time,Delivery.Time))+stat_summary(fun.args = list(),fun.data = mean_cl_normal) + geom_smooth(method='lm')





